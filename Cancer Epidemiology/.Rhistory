#|                                                      |
#| source("F:/International Cancer Institute-ICI/Epidemiology/Practical_FlexMod/PW2/pw2.R", echo=T)
#|                                                      |
#-------------------------------------------------------*
#
# 		 ===========================
#   		|	Pratical work n?2   |
# 		 ===========================
setwd("F:/International Cancer Institute-ICI/Epidemiology/Practical_FlexMod/")
sink("PW2/pw2.lis")
date()
system("hostname", intern=T)
library("survival")
library("mexhaz")
sessionInfo()
#------------------------------------------------------------------------------------------------------------------------
## 2.1 ==> Get the population hazard and plot hazard vs age for year=2000 and females&Males in log scale
load("data/popex1.RData")
summary(popex1)
dim(popex1)
head(popex1)
plot(popex1$age[popex1$sex=="Females"&popex1$year==2000], popex1$rate[popex1$sex=="Females"&popex1$year==2000],
xlab="Age", ylab="Population Hazard", log="y", type="l", col="red")
lines(popex1$age[popex1$sex=="Males"&popex1$year==2000], popex1$rate[popex1$sex=="Males"&popex1$year==2000], col="green")
legend("topleft",col=c("red","green"),lty=1,legend=c("Females","Males"))
#------------------------------------------------------------------------------------------------------------------------
## 2.2 ==> Add the population hazard at death in datacolon ===> save as datacolon.v2
load("data/datacolon.RData")
datacolon$fu=as.numeric((datacolon$finmdy-datacolon$diagmdy)/365.25)
datacolon$agedeath=trunc(datacolon$agediag+datacolon$fu)
datacolon$yeardeath=as.numeric(format(datacolon$finmdy, format = "%Y"))
datacolon$agedeath=ifelse(datacolon$agedeath>100, 100, datacolon$agedeath)
datacolon.v2=merge(datacolon, popex1[popex1$sex=="Males", c("age","year","rate")],
by.x=c("agedeath","yeardeath"), by.y=c("age","year")
)
save(datacolon.v2,file = "data/datacolon.v2.RData")
#------------------------------------------------------------------------------------------------------------------------
## 2.3 ==> fit a excess hazard model where the baseline is piecewise constant and plot the hazard
#	   with intervas: "[0,0.25]"   "(0.25,0.5]" "(0.5,1]"    "(1,2]"      "(2,3]"      "(3,4]"      "(4,5]"
# 	   save the values of the hazard in /PW2/hazard23.Rdata
stage="St4"
temp=datacolon.v2[datacolon.v2$stage==stage,]
interval=c(0.25, 0.5, 1:5)
model23=mexhaz(Surv(time=fu,event=dead)~ 1, data=temp, base="pw.cst", knots=interval, expected="rate")
# Note the WARNING message: "Some observations had a follow-up time of length 0. ..."
# summary, coefficients and variance-covariance matrix
summary(model23)
model23$coef
round(model23$vcov,4)
# With mexhaz
# pred.model23=predict(model23, time.pts=c(0.0001, seq(0.1,5, by=0.0001)))
# note that the above "by" parameters must be low
# plot(pred.model23, which="hazard", conf.int=TRUE)
begin.interval=c(0, 0.25, 0.5, 1:4)
end.interval=c(0.25, 0.5, 1:5)
hazard23=exp(model23$coef[-match("(5,7.96]", names(model23$coef))])
plot(0,0, type="n", xlim=c(0,5), ylim=c(0,2),xlab="Time since diagnosis", ylab="hazard ")
segments(begin.interval, hazard23, end.interval, hazard23, lwd=3,col=3)
title( paste("\nExcess hazard, stage=",stage ), cex=0.6)
save(hazard23,file = "PW2/hazard23.RData"   )
#------------------------------------------------------------------------------------------------------------------------
## 2.4 ==> with model defined in 2.3, calculate the net survival at 1 year and 1.37 years; check the results with predict.mexhaz
# cumulative hazard at 1 year then NS
ch1=0.25*exp(model23$coef["[0,0.25]"])+ 0.25*exp(model23$coef["(0.25,0.5]"]) + 0.5*exp(model23$coef["(0.5,1]"])
exp(-ch1)
# cumulative hazard at 1.37 year then NS
ch137=0.25*exp(model23$coef["[0,0.25]"])+ 0.25*exp(model23$coef["(0.25,0.5]"]) + 0.5*exp(model23$coef["(0.5,1]"])+ 0.37*exp(model23$coef["(1,2]"])
exp(-ch137)
predict(model23, time.pts=c(1, 1.37) )$results
#------------------------------------------------------------------------------------------------------------------------------
## 2.5 ==> calculate the CI of these net survivals (at 1 year and 1.37 years), using a Wald-type CI for the cumulative hazard
# check the results with predict.mexhaz
# var(exp(beta))# [exp(beta)]^2 * var(beta)
var.ch1=0.25^2*exp(model23$coef["[0,0.25]"])^2*  model23$vcov["[0,0.25]","[0,0.25]"] +
0.25^2*exp(model23$coef["(0.25,0.5]"])^2*model23$vcov["(0.25,0.5]","(0.25,0.5]"] +
0.50^2*exp(model23$coef["(0.5,1]"])^2*model23$vcov["(0.5,1]","(0.5,1]"]
binf.ch1=ch1-qnorm(0.975)*sqrt(var.ch1)
bsup.ch1=ch1+qnorm(0.975)*sqrt(var.ch1)
c(exp(-bsup.ch1), exp(-binf.ch1))
var.ch137=0.25^2*exp(model23$coef["[0,0.25]"])^2*  model23$vcov["[0,0.25]","[0,0.25]"] +
0.25^2*exp(model23$coef["(0.25,0.5]"])^2*model23$vcov["(0.25,0.5]","(0.25,0.5]"] +
0.50^2*exp(model23$coef["(0.5,1]"])^2*model23$vcov["(0.5,1]","(0.5,1]"]+
0.37^2*exp(model23$coef["(1,2]"])^2*model23$vcov["(1,2]","(1,2]"]
binf.ch137=ch137-qnorm(0.975)*sqrt(var.ch137)
bsup.ch137=ch137+qnorm(0.975)*sqrt(var.ch137)
c(exp(-bsup.ch137), exp(-binf.ch137))
predict(model23, time.pts=c(1, 1.37), delta.type.s="log" )$results
#------------------------------------------------------------------------------------------------------------------------------
##  2.6:
# Using predict.mexhaz, compute CI for NS at the same times assuming normality on log-log scale (i.e. : on the log-cumulative scale)
predict(model23, time.pts=c(1, 1.37), delta.type.s="log-log" )$results
date()
sink()
date()
system("hostname", intern=T)
library("survival")
library("mexhaz")
sessionInfo()
#------------------------------------------------------------------------------------------------------------------------
## 2.1 ==> Get the population hazard and plot hazard vs age for year=2000 and females&Males in log scale
load("data/popex1.RData")
summary(popex1)
dim(popex1)
head(popex1)
plot(popex1$age[popex1$sex=="Females"&popex1$year==2000], popex1$rate[popex1$sex=="Females"&popex1$year==2000],
xlab="Age", ylab="Population Hazard", log="y", type="l", col="red")
load("data/popex1.RData")
summary(popex1)
dim(popex1)
head(popex1)
plot(popex1$age[popex1$sex=="Females"&popex1$year==2000], popex1$rate[popex1$sex=="Females"&popex1$year==2000],
xlab="Age", ylab="Population Hazard", log="y", type="l", col="red")
lines(popex1$age[popex1$sex=="Males"&popex1$year==2000], popex1$rate[popex1$sex=="Males"&popex1$year==2000], col="green")
legend("topleft",col=c("red","green"),lty=1,legend=c("Females","Males"))
load("data/datacolon.RData")
datacolon$fu=as.numeric((datacolon$finmdy-datacolon$diagmdy)/365.25)
datacolon$agedeath=trunc(datacolon$agediag+datacolon$fu)
datacolon$yeardeath=as.numeric(format(datacolon$finmdy, format = "%Y"))
datacolon$agedeath=ifelse(datacolon$agedeath>100, 100, datacolon$agedeath)
datacolon.v2=merge(datacolon, popex1[popex1$sex=="Males", c("age","year","rate")],
by.x=c("agedeath","yeardeath"), by.y=c("age","year")
)
save(datacolon.v2,file = "data/datacolon.v2.RData")
stage="St4"
temp=datacolon.v2[datacolon.v2$stage==stage,]
interval=c(0.25, 0.5, 1:5)
model23=mexhaz(Surv(time=fu,event=dead)~ 1, data=temp, base="pw.cst", knots=interval, expected="rate")
# summary, coefficients and variance-covariance matrix
summary(model23)
# summary, coefficients and variance-covariance matrix
summary(model23)
model23$coef
round(model23$vcov,4)
plot(pred.model23, which="hazard", conf.int=TRUE)
pred.model23=predict(model23, time.pts=c(0.0001, seq(0.1,5, by=0.0001)))
plot(pred.model23, which="hazard", conf.int=TRUE)
begin.interval=c(0, 0.25, 0.5, 1:4)
end.interval=c(0.25, 0.5, 1:5)
hazard23=exp(model23$coef[-match("(5,7.96]", names(model23$coef))])
plot(0,0, type="n", xlim=c(0,5), ylim=c(0,2),xlab="Time since diagnosis", ylab="hazard ")
segments(begin.interval, hazard23, end.interval, hazard23, lwd=3,col=3)
title( paste("\nExcess hazard, stage=",stage ), cex=0.6)
save(hazard23,file = "PW2/hazard23.RData"   )
# cumulative hazard at 1 year then NS
ch1=0.25*exp(model23$coef["[0,0.25]"])+ 0.25*exp(model23$coef["(0.25,0.5]"]) + 0.5*exp(model23$coef["(0.5,1]"])
exp(-ch1)
# cumulative hazard at 1.37 year then NS
ch137=0.25*exp(model23$coef["[0,0.25]"])+ 0.25*exp(model23$coef["(0.25,0.5]"]) + 0.5*exp(model23$coef["(0.5,1]"])+ 0.37*exp(model23$coef["(1,2]"])
exp(-ch137)
predict(model23, time.pts=c(1, 1.37) )$results
setwd("C:/Users/Aurel/Dropbox/WorkStat/Teaching/Nairobi-2019_ISCB_ShortCourse/Material/Practical_FlexMod/")
sink("PW3/pw3.lis")
date()
setwd("F:/International Cancer Institute-ICI/Epidemiology/Practical_FlexMod/")
sink("PW3/pw3.lis")
date()
system("hostname", intern=T)
library(survival)
library(mexhaz)
library(splines)
sessionInfo()
load("data/datacolon.v2.RData")
stage="St4"
temp=datacolon.v2[datacolon.v2$stage==stage,]
model31=mexhaz(Surv(time=fu,event=dead)~ 1, data=temp, base="exp.bs", knots=c(1), bound=c(0,8), expected="rate")
pred.model31=predict(model31, time.pts=c(0.0001, seq(0.01,5, by=0.01)))
head(pred.model31$results)
date()
system("hostname", intern=T)
library(survival)
library(mexhaz)
library(splines)
sessionInfo()
load("data/datacolon.v2.RData")
stage="St4"
temp=datacolon.v2[datacolon.v2$stage==stage,]
model31=mexhaz(Surv(time=fu,event=dead)~ 1, data=temp, base="exp.bs", knots=c(1), bound=c(0,8), expected="rate")
pred.model31=predict(model31, time.pts=c(0.0001, seq(0.01,5, by=0.01)))
head(pred.model31$results)
load("PW2/hazard23.RData"   )
begin.interval=c(0, 0.25, 0.5, 1:4)
end.interval=c(0.25, 0.5, 1:5)
end.interval
plot(0,0, type="n", xlim=c(0,5), ylim=c(0,2),xlab="Time since diagnosis", ylab="Excess hazard ")
segments(begin.interval, hazard23, end.interval, hazard23, lwd=3,col=3)
lines(pred.model31$results$time.pts, pred.model31$results$hazard, col="red")
library(splines)
# Note the default values for intercept and degree of the bs function !
formula31=as.formula("~bs(fu, k=1, B=c(0,8))" )
beta31=as.numeric(model31$coef)
my.data31=data.frame(fu=seq(0,5,by=0.01))
# my.mat31 is the design matrix
#
my.mat31=model.matrix(formula31, data=my.data31)
my.data31$hazard=exp(my.mat31%*%beta31)
head(my.data31)
lines(my.data31$fu, my.data31$hazard, col="blue", lty=8, lwd=2)
lines(my.data31$fu, my.data31$hazard, col="blue", lty=8, lwd=2)
library(statmod)
GL <- gauss.quad(n=100,kind="legendre")
## ?Rescale? to modify the nodes and weight of Gauss-Legendre approximation according to the integration interval:
Rescale <- function(gl,a,b){gl$nodes <- gl$nodes*(b-a)/2+(a+b)/2 ; gl$weights <- gl$weights*(b-a)/2; return(gl) }
gg <- Rescale(GL,0,1.5)
gg
# Compute the design matrix evaluated  at the 100 integration points (100 nodes)
#
rm(my.mat31)
my.mat31=model.matrix(formula31,data.frame(fu=gg$nodes))
# Compute of cumulative hazard ch as a simple weighted sum of hazard
# then NS=exp(-ch)
ch=sum(gg$weights*exp(my.mat31%*%beta31))
exp(-ch)
# check with mexhaz
predict(model31, time.pts=c(1.5))
# Approximation RECTANGLE ==> NOT TO DO IN REAL LIFE !!
rm(my.mat31)
my.mat31=model.matrix(formula31,data.frame(fu=seq(0,1.5, by=0.0005)))
hazard=exp(my.mat31%*%beta31)
ch2=sum(0.0005*hazard)
exp(-ch2)
# with 20 nodes
GL <- gauss.quad(n=20,kind="legendre")
gg <- Rescale(GL,0,1.5)
rm(my.mat31)
my.mat31=model.matrix(formula31,data.frame(fu=gg$nodes))
exp(-sum(gg$weights*exp(my.mat31%*%beta31)))
par(mfrow=c(1,2))
plot(pred.model31, which="hazard", conf.int=F)
lines(pred.model31$results$time.pts, pred.model31$results$hazard.inf, col="red")
lines(pred.model31$results$time.pts, pred.model31$results$hazard.sup, col="red")
#
plot(pred.model31, which="surv", conf.int=F)
lines(pred.model31$results$time.pts, pred.model31$results$surv.inf, col="red")
lines(pred.model31$results$time.pts, pred.model31$results$surv.sup, col="red")
pred.model23$results$hazard.inf
lines(pred.model31$results$time.pts, pred.model31$results$surv.sup, col="red")
# initial log-likelihood
model31$loglik
temp$rate0=ifelse(temp$dead==0, 0, temp$rate)
temp$rate10=ifelse(temp$dead==0, 10*temp$rate, temp$rate)
temp$rate500=ifelse(temp$dead==0, 500*temp$rate, temp$rate)
ll0=mexhaz(Surv(time=fu,event=dead)~ 1, data=temp, base="exp.bs", knots=c(1), bound=c(0,8), expected="rate0", verbose=0)$loglik
ll10=mexhaz(Surv(time=fu,event=dead)~ 1, data=temp, base="exp.bs", knots=c(1), bound=c(0,8), expected="rate10", verbose=0)$loglik
ll500=mexhaz(Surv(time=fu,event=dead)~ 1, data=temp, base="exp.bs", knots=c(1), bound=c(0,8), expected="rate500")$loglik
c(model31$loglik, ll0, ll10, ll500)
date()
ll500
plot(0,0, type="n", xlim=c(0,5), ylim=c(0,2),xlab="Time since diagnosis", ylab="Excess hazard ")
segments(begin.interval, hazard23, end.interval, hazard23, lwd=3,col=3)
lines(pred.model31$results$time.pts, pred.model31$results$hazard, col="red")
library(splines)
# Note the default values for intercept and degree of the bs function !
formula31=as.formula("~bs(fu, k=1, B=c(0,8))" )
beta31=as.numeric(model31$coef)
my.data31=data.frame(fu=seq(0,5,by=0.01))
# my.mat31 is the design matrix
#
my.mat31=model.matrix(formula31, data=my.data31)
my.data31$hazard=exp(my.mat31%*%beta31)
head(my.data31)
lines(my.data31$fu, my.data31$hazard, col="blue", lty=8, lwd=2)
# my.mat31 is the design matrix
#
my.mat31=model.matrix(formula31, data=my.data31)
my.data31$hazard=exp(my.mat31%*%beta31)
head(my.data31)
lines(my.data31$fu, my.data31$hazard, col="blue", lty=8, lwd=2)
library(statmod)
GL <- gauss.quad(n=100,kind="legendre")
## ?Rescale? to modify the nodes and weight of Gauss-Legendre approximation according to the integration interval:
Rescale <- function(gl,a,b){gl$nodes <- gl$nodes*(b-a)/2+(a+b)/2 ; gl$weights <- gl$weights*(b-a)/2; return(gl) }
gg <- Rescale(GL,0,1.5)
gg
# Compute the design matrix evaluated  at the 100 integration points (100 nodes)
#
rm(my.mat31)
my.mat31=model.matrix(formula31,data.frame(fu=gg$nodes))
# Compute of cumulative hazard ch as a simple weighted sum of hazard
# then NS=exp(-ch)
ch=sum(gg$weights*exp(my.mat31%*%beta31))
exp(-ch)
# check with mexhaz
predict(model31, time.pts=c(1.5))
# Approximation RECTANGLE ==> NOT TO DO IN REAL LIFE !!
rm(my.mat31)
my.mat31=model.matrix(formula31,data.frame(fu=seq(0,1.5, by=0.0005)))
hazard=exp(my.mat31%*%beta31)
ch2=sum(0.0005*hazard)
exp(-ch2)
# with 20 nodes
GL <- gauss.quad(n=20,kind="legendre")
gg <- Rescale(GL,0,1.5)
rm(my.mat31)
my.mat31=model.matrix(formula31,data.frame(fu=gg$nodes))
exp(-sum(gg$weights*exp(my.mat31%*%beta31)))
par(mfrow=c(1,2))
plot(pred.model31, which="hazard", conf.int=F)
lines(pred.model31$results$time.pts, pred.model31$results$hazard.inf, col="red")
lines(pred.model31$results$time.pts, pred.model31$results$hazard.sup, col="red")
#
plot(pred.model31, which="surv", conf.int=F)
lines(pred.model31$results$time.pts, pred.model31$results$surv.inf, col="red")
lines(pred.model31$results$time.pts, pred.model31$results$surv.sup, col="red")
# initial log-likelihood
model31$loglik
temp$rate0=ifelse(temp$dead==0, 0, temp$rate)
temp$rate10=ifelse(temp$dead==0, 10*temp$rate, temp$rate)
temp$rate500=ifelse(temp$dead==0, 500*temp$rate, temp$rate)
ll0=mexhaz(Surv(time=fu,event=dead)~ 1, data=temp, base="exp.bs", knots=c(1), bound=c(0,8), expected="rate0", verbose=0)$loglik
ll10=mexhaz(Surv(time=fu,event=dead)~ 1, data=temp, base="exp.bs", knots=c(1), bound=c(0,8), expected="rate10", verbose=0)$loglik
ll500=mexhaz(Surv(time=fu,event=dead)~ 1, data=temp, base="exp.bs", knots=c(1), bound=c(0,8), expected="rate500")$loglik
c(model31$loglik, ll0, ll10, ll500)
date()
date()
system("hostname", intern=T)
library(survival)
library(mexhaz)
library(splines)
sessionInfo()
load("data/datacolon.v2.RData")
stage="St4"
rm(temp)
temp=datacolon.v2[datacolon.v2$agediag>=30&datacolon.v2$agediag<=90&datacolon.v2$stage==stage,]
temp$agegrp <- rep("[30;45[")
temp$agegrp <- ifelse(temp$agediag>=45 & temp$agediag<55, "[45;55[", temp$agegrp)
temp$agegrp <- ifelse(temp$agediag>=55 & temp$agediag<65, "[55;65[", temp$agegrp)
temp$agegrp <- ifelse(temp$agediag>=65 & temp$agediag<75, "[65;75[", temp$agegrp)
temp$agegrp <- ifelse(temp$agediag>=75 & temp$agediag<=90, "[75;90]", temp$agegrp)
# check the code:
tapply(temp$agediag, temp$agegrp, range)
temp$Iagegrp3045 <- ifelse(temp$agegrp=="[30;45[",1,0)
temp$Iagegrp4555 <- ifelse(temp$agegrp=="[45;55[",1,0)
temp$Iagegrp5565 <- ifelse(temp$agegrp=="[55;65[",1,0)
temp$Iagegrp6575 <- ifelse(temp$agegrp=="[65;75[",1,0)
temp$Iagegrp7590 <- ifelse(temp$agegrp=="[75;90]",1,0)
# [65;75[ is the reference
#
model41=mexhaz(Surv(time=fu,event=dead)~Iagegrp3045+Iagegrp4555+Iagegrp5565+Iagegrp7590 ,
data=temp, base="exp.bs", knots=c(1), bound=c(0,8), expected="rate")
library(splines)
formula41=as.formula("~bs(fu, k=1, B=c(0,8)) + Iagegrp3045+Iagegrp4555+Iagegrp5565+Iagegrp7590" )
beta41=as.numeric(model41$coef)
my.data41=data.frame(fu=0:5)
my.data41=merge(my.data41, data.frame(agegrp=c("[30;45[", "[45;55[", "[55;65[", "[65;75[", "[75;90]")   ))
my.data41$Iagegrp3045 <- ifelse(my.data41$agegrp=="[30;45[",1,0)
my.data41$Iagegrp4555 <- ifelse(my.data41$agegrp=="[45;55[",1,0)
my.data41$Iagegrp5565 <- ifelse(my.data41$agegrp=="[55;65[",1,0)
my.data41$Iagegrp6575 <- ifelse(my.data41$agegrp=="[65;75[",1,0)
my.data41$Iagegrp7590 <- ifelse(my.data41$agegrp=="[75;90]",1,0)
my.mat41=model.matrix(formula41, data=my.data41)
my.data41$hazard=exp(my.mat41%*%beta41)
head(my.data41)
my.data41[my.data41$agegrp=="[30;45[",]
my.data41[my.data41$agegrp=="[65;75[",]
predict(model41, time.pts=c(0.0000001, 1:5),
data.val = data.frame(Iagegrp3045=1,Iagegrp4555=0,Iagegrp5565=0,Iagegrp7585=0,Iagegrp7590=0)
)
predict(model41, time.pts=c(0.0000001, 1:5),
data.val = data.frame(Iagegrp3045=0,Iagegrp4555=0,Iagegrp5565=0,Iagegrp7585=0,Iagegrp7590=0)
)
# get the hazards of the reference group
#
ref=my.data41[my.data41$agegrp=="[65;75[",c("fu","hazard")]
ref$hz.ref=ref$hazard
my.data41=merge(my.data41, ref[,c("fu","hz.ref")])
my.data41$HR=my.data41$hazard/my.data41$hz.ref
my.data41=my.data41[order(my.data41$agegrp, my.data41$fu), c("fu","agegrp","hazard","hz.ref","HR")]
my.data41
my.data41[my.data41$agegrp=="[30;45[",]
exp(model41$coef)
my.data41$begin.interval=as.numeric(substring(my.data41$agegrp,2,3))
my.data41$end.interval=  as.numeric(substring(my.data41$agegrp,5,6))
plot(0,0, type="n", xlim=c(30,90), ylim=c(0.5,2),xlab="Age at diagnosis", ylab="HR (ref=[65;75[) ")
segments(my.data41$begin.interval, my.data41$HR, my.data41$end.interval, my.data41$HR, lwd=3,col=3)
title("Excess Hazard Ratio for each age group")
temp$agecr=(temp$agediag-70)/10
temp$agecr2=temp$agecr^2
temp$agecr3=temp$agecr^3
posk=0
temp$agecr3plus=(temp$agecr-posk)^3*(temp$agecr>posk)
model45=mexhaz(Surv(time=fu,event=dead)~ agecr+ agecr2 +agecr3+ agecr3plus,
data=temp, base="exp.bs", knots=c(1), bound=c(0,8), expected="rate")
summary(model45)
summary(model145)
summary(model45)
summary(model45)
model45.bs=mexhaz(Surv(time=fu,event=dead)~ bs(agediag, k=70, B=c(20,120)), data=temp, base="exp.bs", knots=c(1), bound=c(0,8), expected="rate")
summary(model45.bs)
c(model45$loglik, model45.bs$loglik)
# predicted for an age like the age of idenpat=8 for example
predict(model45, time.pts=1:5, data.val =temp[temp$idenpat==8,] )
predict(model45.bs, time.pts=1:5, data.val =temp[temp$idenpat==8,] )
beta45.HR=as.numeric(model45$coef[c("agecr","agecr2","agecr3","agecr3plus")])
my.data45=data.frame(age=30:100)
my.data45$agecr=(my.data45$age-70)/10
my.data45$agecr2=my.data45$agecr^2
my.data45$agecr3=my.data45$agecr^3
my.data45$agecr3plus=(my.data45$agecr-posk)^3*(my.data45$agecr>posk)
my.mat45=as.matrix(my.data45[,c("agecr","agecr2","agecr3","agecr3plus")])
my.data45$HR=exp(my.mat45%*%beta45.HR)
lines(my.data45$age, my.data45$HR, col="blue")
temp$agecr3=temp$agecr^3
posk=0
temp$agecr3plus=(temp$agecr-posk)^3*(temp$agecr>posk)
model45=mexhaz(Surv(time=fu,event=dead)~ agecr+ agecr2 +agecr3+ agecr3plus,
data=temp, base="exp.bs", knots=c(1), bound=c(0,8), expected="rate")
summary(model45)
View(datacolon.v2)
table
table(datacolon.v2$stage)
head(datacolon.v2)
setwd("F:/International Cancer Institute-ICI/Epidemiology/Practical_FlexMod/")
date()
system("hostname", intern=T)
library(survival)
library(mexhaz)
library(splines)
sessionInfo()
load("data/datacolon.v2.RData")
stage="St4"
temp=datacolon.v2[datacolon.v2$stage==stage,]
model31=mexhaz(Surv(time=fu,event=dead)~ 1, data=temp, base="exp.bs", knots=c(1), bound=c(0,8), expected="rate")
pred.model31=predict(model31, time.pts=c(0.0001, seq(0.01,5, by=0.01)))
head(pred.model31$results)
load("PW2/hazard23.RData"   )
begin.interval=c(0, 0.25, 0.5, 1:4)
end.interval=c(0.25, 0.5, 1:5)
plot(0,0, type="n", xlim=c(0,5), ylim=c(0,2),xlab="Time since diagnosis", ylab="Excess hazard ")
segments(begin.interval, hazard23, end.interval, hazard23, lwd=3,col=3)
lines(pred.model31$results$time.pts, pred.model31$results$hazard, col="red")
library(splines)
# Note the default values for intercept and degree of the bs function !
formula31=as.formula("~bs(fu, k=1, B=c(0,8))" )
beta31=as.numeric(model31$coef)
my.data31=data.frame(fu=seq(0,5,by=0.01))
# my.mat31 is the design matrix
#
my.mat31=model.matrix(formula31, data=my.data31)
my.data31$hazard=exp(my.mat31%*%beta31)
head(my.data31)
lines(my.data31$fu, my.data31$hazard, col="blue", lty=8, lwd=2)
library(statmod)
GL <- gauss.quad(n=100,kind="legendre")
## ?Rescale? to modify the nodes and weight of Gauss-Legendre approximation according to the integration interval:
Rescale <- function(gl,a,b){gl$nodes <- gl$nodes*(b-a)/2+(a+b)/2 ; gl$weights <- gl$weights*(b-a)/2; return(gl) }
gg <- Rescale(GL,0,1.5)
gg
# Compute the design matrix evaluated  at the 100 integration points (100 nodes)
#
rm(my.mat31)
my.mat31=model.matrix(formula31,data.frame(fu=gg$nodes))
# Compute of cumulative hazard ch as a simple weighted sum of hazard
# then NS=exp(-ch)
ch=sum(gg$weights*exp(my.mat31%*%beta31))
exp(-ch)
# check with mexhaz
predict(model31, time.pts=c(1.5))
# Approximation RECTANGLE ==> NOT TO DO IN REAL LIFE !!
rm(my.mat31)
# Note the default values for intercept and degree of the bs function !
formula31=as.formula("~bs(fu, k=1, B=c(0,8))" )
beta31=as.numeric(model31$coef)
my.data31=data.frame(fu=seq(0,5,by=0.01))
# my.mat31 is the design matrix
#
my.mat31=model.matrix(formula31, data=my.data31)
my.data31$hazard=exp(my.mat31%*%beta31)
head(my.data31)
setwd("F:/International Cancer Institute-ICI/Cancer Epidemiology/ForStudent/Practical_FlexMixMod")
# Load necessary package
library(mexhaz)
mypath <-"F:/International Cancer Institute-ICI/Cancer Epidemiology/ForStudent/Practical_FlexMixMod"
mydat <- read.delim(paste0(mypath, "fakeLOCP.dat"))
setwd("F:/International Cancer Institute-ICI/Cancer Epidemiology/ForStudent/Practical_FlexMixMod")
mypath <-"F:/International Cancer Institute-ICI/Cancer Epidemiology/ForStudent/Practical_FlexMixMod"
mydat <- read.delim(paste0(mypath, "fakeLOCP.dat"))
# Load necessary package
library(mexhaz)
mypath <-"F:/International Cancer Institute-ICI/Cancer Epidemiology/ForStudent/Practical_FlexMixMod"
mydat <- read.delim(paste0(mypath, "fakeLOCP.dat"))
mypath <-"F:/International Cancer Institute-ICI/Cancer Epidemiology/ForStudent/Practical_FlexMixMod/"
mydat <- read.delim(paste0(mypath, "fakeLOCP.dat"))
# select only men
mydat <- subset(mydat, sex==1)
summary(mydat)
# create survival time and corresponding vital status
mydat$timesurv10y <- pmin(mydat$timesurv, 10)
mydat$status10y <- ifelse(mydat$timesurv10y==mydat$timesurv,mydat$status,0)
mydat$Iagecat1545 <- ifelse(mydat$agediag>=15 & mydat$agediag<45,1,0)
mydat$Iagecat4555 <- ifelse(mydat$agediag>=45 & mydat$agediag<55,1,0)
mydat$Iagecat5565 <- ifelse(mydat$agediag>=55 & mydat$agediag<65,1,0)
mydat$Iagecat6575 <- ifelse(mydat$agediag>=65 & mydat$agediag<75,1,0)
mydat$Iagecat75pp <- ifelse(mydat$agediag>=75 ,1,0)
# Creation of the variable for a spline of age (deg 3, knot 70) in a truncated power basis
# not reduced
mydat$agediagc=mydat$agediag-70
mydat$agediagc2 <- mydat$agediagc^2
mydat$agediagc3 <- mydat$agediagc^3
mydat$agediagc3plus <- (mydat$agediagc-0)^3*(mydat$agediagc>0)
# redcued
mydat$agediagcr=(mydat$agediag-70)/10
mydat$agediagcr2 <- mydat$agediagcr^2
mydat$agediagcr3 <- mydat$agediagcr^3
mydat$agediagcr3plus <- (mydat$agediagcr-0)^3*(mydat$agediagcr>0)
# Distribution of EDI and agediag in the population
summary(mydat$EDI)
summary(mydat$agediag)
FPM1 <- mexhaz(Surv(timesurv10y, status10y)~ Iagecat1545 + Iagecat4555 + Iagecat5565 + Iagecat75pp,
expected="expectedrate", degree=3, knots = c(1,5), base="exp.bs", data=mydat, verbose = 0)
summary(FPM1)
library(relsurv)
install.packages(c("mexhaz", "relsurv", "statmod"))
