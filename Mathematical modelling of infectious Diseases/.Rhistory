#example1(No interaction between Susceptibles and infectives)
parameters<-c(lambda=0.2,v=36.5)
parameters
state<-c(x=4999,y=1,z=0)
install.packages("deSolve")
#Parameters
parameters <- c(a = -8/3, b = -10, c = 28)
#Initial conditions
state <- c(X = 1, Y = 1, Z = 1)
Lorenz<-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
dX <- a*X + Y*Z
dY <- b * (Y-Z)
dZ <- -X*Y + c*Y - Z
# return the rate of change
list(c(dX, dY, dZ))
}) # end with(as.list...
}
#We run the model for 100 days, and give output at 0.01 daily intervals. R's function seq() creates the time sequence.
times <-seq(0,100,by=0.01)
#install.packages('deSolve')
require(deSolve)
out <- as.data.frame(ode(y=state,times=times,func=Lorenz,parms=parameters))
head(out)
par(mfrow=c(2,2), oma=c(0,0,3,0))
plot (times,out$X ,type="l",main="X", xlab="time", ylab="-")
plot (times,out$Y ,type="l",main="Y", xlab="time", ylab="-")
plot (out$X,out$Y, pch=".")
plot (out$X,out$Z, pch=".")
mtext(outer=TRUE,side=3,"Lorenz model",cex=1.5)
?plot   # to view the plotting parameter (pch, col, bg, cex and lwd) options.
print(system.time(out1 <- rk4 (state, times, Lorenz, parameters)))
print(system.time(out2 <- lsode (state, times, Lorenz, parameters)))
print(system.time(out <- lsoda (state, times, Lorenz, parameters)))
print(system.time(out <- lsodes(state, times, Lorenz, parameters)))
print(system.time(out <- daspk (state, times, Lorenz, parameters)))
print(system.time(out <- vode (state, times, Lorenz, parameters)))
state
SIR<-function(t,state,parameters)
{
with(as.list(c(state,parameters)),
{
dx<--lambda*x
dy<-lambda*x-v*y
dz<-v*y
list(c(dx,dy,dz))
})
}
times<-seq(0,40,by=0.01)
times
require(deSolve)
out<-as.data.frame(ode(y=state,times =times,func = SIR,parms = parameters ))
plot(times,out$x,type="l",lwd=3)
lines(times,out$y,col="red",lwd=3)
lines(times,out$z,col="blue",lwd=3)
legend(30,3500,c("S","I","R"),lty ="l",lwd=3,col = c("black","red","blue"))
#example2(interaction between suseptibles and infectives)
parameters<-c(beta=0.0085,v=36.5)
parameters
state<-c(x=4999,y=1,z=0)
state
SIR<-function(t,state,parameters)
{
with(as.list(c(state,parameters)),
{
dx<--beta*x*y
dy<-beta*y*x-v*y
dz<-v*y
list(c(dx,dy,dz))
})
}
times<-seq(0,40,by=0.01)
times
require(deSolve)
out<-as.data.frame(ode(y=state,times =times,func = SIR,parms = parameters ))
plot(times,out$x,type="l",lwd=3)
lines(times,out$y,col="red",lwd=3)
lines(times,out$z,col="blue",lwd=3)
legend(30,3500,c("S","I","R"),lty ="l",lwd=2,col = c("black","red","blue"))
#example3(Assuming demographics)
parameters<-c(mu=0.017,beta=0.0003,sig=0.03,v=0.1)
parameters
state<-c(x=999,y=1,z=0)
state
SIR<-function(t,state,parameters)
{
with(as.list(c(state,parameters)),
{
dx<-1000*mu-beta*x*y-mu*x
dy<-beta*y*x-v*y-mu*y-sig*y
dz<-v*y-mu*z
list(c(dx,dy,dz))
})
}
times<-seq(0,50,by=0.01)
times
require(deSolve)
out<-as.data.frame(ode(y=state,times =times,func = SIR,parms = parameters ))
plot(times,out$x,type="l",lwd=3 ,ylab="Freq",ylim=c(0,1000),xlab="Times in years")
lines(times,out$y,col="red",lwd=3)
lines(times,out$z,col="blue",lwd=3)
legend(30,3500,c("S","I","R"),lty ="l",lwd=2,col = c("black","red","blue"))
